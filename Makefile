# Klinika Pro PACS - Makefile
# Author: Tim Hunt (tr00x)
# Version: 1.0

.PHONY: help install start stop restart status logs clean backup restore update

# Default target
.DEFAULT_GOAL := help

# Colors
BLUE := \033[0;34m
GREEN := \033[0;32m
YELLOW := \033[1;33m
RED := \033[0;31m
NC := \033[0m

# Project info
PROJECT_NAME := "Klinika Pro PACS"
VERSION := "1.0"
AUTHOR := "Tim Hunt (tr00x)"

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo -e "$(BLUE)‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó$(NC)"
	@echo -e "$(BLUE)‚ïë                    üè• KLINIKA PRO PACS üè•                    ‚ïë$(NC)"
	@echo -e "$(BLUE)‚ïë                  –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è v1.0                    ‚ïë$(NC)"
	@echo -e "$(BLUE)‚ïë                   Author: Tim Hunt (tr00x)                   ‚ïë$(NC)"
	@echo -e "$(BLUE)‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù$(NC)"
	@echo ""
	@echo -e "$(YELLOW)üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}'
	@echo ""
	@echo -e "$(BLUE)üåê –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:$(NC)"
	@echo -e "  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $(GREEN)https://localhost$(NC)"
	@echo -e "  –í—Ö–æ–¥:       $(GREEN)https://localhost/login$(NC)"
	@echo ""

install: ## –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã
	@echo -e "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏...$(NC)"
	@chmod +x install.sh
	@./install.sh

start: ## –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
	@echo -e "$(BLUE)‚ö° –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@chmod +x quick-start.sh
	@./quick-start.sh

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo -e "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose down
	@echo -e "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
	@echo -e "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@docker-compose down
	@docker-compose up -d
	@echo -e "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo -e "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@docker-compose ps

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo -e "$(BLUE)üìú –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã:$(NC)"
	@docker-compose logs -f

logs-ohif: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ OHIF Viewer
	@docker-compose logs -f ohif_viewer

logs-orthanc: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Orthanc DICOM Server
	@docker-compose logs -f orthanc

logs-auth: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Flask Auth Service
	@docker-compose logs -f flask_auth_service

logs-nginx: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Nginx Proxy
	@docker-compose logs -f nginx

logs-db: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ PostgreSQL Database
	@docker-compose logs -f db_pacs

clean: ## –û—á–∏—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É (—É–¥–∞–ª–∏—Ç—å –æ–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã)
	@echo -e "$(RED)üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@docker-compose down --rmi all --volumes --remove-orphans
	@docker system prune -f
	@echo -e "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞$(NC)"

backup: ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö
	@echo -e "$(BLUE)üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...$(NC)"
	@chmod +x backup.sh
	@./backup.sh

restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
	@echo -e "$(BLUE)üìÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...$(NC)"
	@echo "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π:"
	@ls -la backup/ 2>/dev/null || echo "–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã
	@echo -e "$(BLUE)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@docker-compose build --no-cache
	@echo -e "$(GREEN)‚úÖ –û–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

update: ## –û–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
	@echo -e "$(BLUE)‚¨ÜÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@docker-compose pull
	@docker-compose build --no-cache
	@docker-compose up -d
	@echo -e "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞$(NC)"

upload-test: ## –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ DICOM –¥–∞–Ω–Ω—ã–µ
	@echo -e "$(BLUE)üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@chmod +x upload.sh
	@./upload.sh

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã
	@echo -e "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã:$(NC)"
	@echo ""
	@echo -e "$(YELLOW)–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:$(NC)"
	@docker-compose ps
	@echo ""
	@echo -e "$(YELLOW)–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:$(NC)"
	@echo -n "OHIF Viewer: "
	@curl -s -k https://localhost/ > /dev/null && echo -e "$(GREEN)‚úÖ OK$(NC)" || echo -e "$(RED)‚ùå FAIL$(NC)"
	@echo -n "Orthanc API: "
	@curl -s http://localhost:8042/system > /dev/null && echo -e "$(GREEN)‚úÖ OK$(NC)" || echo -e "$(RED)‚ùå FAIL$(NC)"
	@echo -n "Flask Auth: "
	@curl -s http://localhost:5001/health > /dev/null && echo -e "$(GREEN)‚úÖ OK$(NC)" || echo -e "$(RED)‚ùå FAIL$(NC)"

shell-db: ## –í–æ–π—Ç–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL
	@docker-compose exec db_pacs psql -U orthanc_user -d orthanc

shell-orthanc: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Orthanc
	@docker-compose exec orthanc sh

shell-ohif: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä OHIF
	@docker-compose exec ohif_viewer sh

shell-auth: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Flask Auth
	@docker-compose exec flask_auth_service sh

dev: ## –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏)
	@echo -e "$(BLUE)üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@docker-compose up

prod: ## –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º (—Ñ–æ–Ω–æ–≤—ã–π –∑–∞–ø—É—Å–∫)
	@echo -e "$(BLUE)üè≠ –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º...$(NC)"
	@docker-compose up -d
	@echo -e "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ$(NC)"

info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
	@echo -e "$(BLUE)‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:$(NC)"
	@echo ""
	@echo -e "$(YELLOW)–ü—Ä–æ–µ–∫—Ç:$(NC) $(PROJECT_NAME)"
	@echo -e "$(YELLOW)–í–µ—Ä—Å–∏—è:$(NC) $(VERSION)"
	@echo -e "$(YELLOW)–ê–≤—Ç–æ—Ä:$(NC) $(AUTHOR)"
	@echo ""
	@echo -e "$(YELLOW)–°–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  - OHIF Viewer (–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫)"
	@echo "  - Orthanc DICOM Server (DICOM —Å–µ—Ä–≤–µ—Ä)"
	@echo "  - Flask Auth Service (–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è)"
	@echo "  - PostgreSQL Database (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)"
	@echo "  - Nginx Reverse Proxy (–ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä)"
	@echo ""
	@echo -e "$(YELLOW)–ü–æ—Ä—Ç—ã:$(NC)"
	@echo "  - 443 (HTTPS) - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
	@echo "  - 80 (HTTP) - –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS"
	@echo "  - 8042 - Orthanc Web Interface"
	@echo "  - 5001 - Flask Auth API"
	@echo ""
	@echo -e "$(YELLOW)–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:$(NC)"
	@echo "  - admin/admin (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)"
	@echo "  - doctor/doctor (–í—Ä–∞—á)"
	@echo "  - operator/operator (–û–ø–µ—Ä–∞—Ç–æ—Ä)"

# Development helpers
reset: clean install ## –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞

quick: stop start ## –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞

ports: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã
	@echo -e "$(BLUE)üîå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã:$(NC)"
	@lsof -i :80,443,8042,5001,5432 2>/dev/null || echo "–ü–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã" 