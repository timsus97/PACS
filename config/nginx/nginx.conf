events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream for OHIF
    # Upstream for Orthanc PACS
    upstream orthanc_backend {
        server pacs_orthanc_server:8042;
    }

    upstream ohif_backend {
        server pacs_ohif_supabase:80;
    }

    # Upstream for Flask Dashboard
    upstream flask_backend {
        server pacs_flask_auth:5000;
    }

    # HTTP Server - Redirect to HTTPS
    server {
    # Large DICOM file support
    client_max_body_size 2G;
    client_body_timeout 300s;
    client_body_buffer_size 128k;
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name srv853233.hstgr.cloud;

        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS Server
    server {
    # Large DICOM file support
    client_max_body_size 2G;
    client_body_timeout 300s;
    client_body_buffer_size 128k;
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name srv853233.hstgr.cloud;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        
        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers (relaxed for CDN resources)
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdn.jsdelivr.net unpkg.com polyfill.io; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com data:; img-src 'self' data:; connect-src 'self' https://*.supabase.co wss://*.supabase.co https://server.dcmjs.org https://31.97.135.47 https://srv853233.hstgr.cloud https://unpkg.com;";

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Test endpoint
        location /test {
            return 200 "ðŸŽ‰ Supabase PACS is working with HTTPS! Time: $time_iso8601";
            add_header Content-Type text/plain;
        }

        # Serve Supabase login page
        location = / {
            proxy_pass http://ohif_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /login {
            root /usr/share/nginx/html/static;
            try_files /login.html =404;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        # Flask routes - proxy all Flask auth service routes
        location /dashboard {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /viewer {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /logout {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Orthanc PACS server proxy
        location /orthanc/ {
            proxy_pass http://orthanc_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Expose-Headers "Content-Length, X-Total-Count";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Accept, Accept-Language, Content-Language, Content-Type, Authorization, X-Requested-With, Origin, Cache-Control, Pragma";
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # Handle notfoundserver redirect issue
        location = /notfoundserver {
    # Large DICOM file support
    client_max_body_size 2G;
    client_body_timeout 300s;
    client_body_buffer_size 128k;
            return 302 /;
        }

        location /api/ {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files
        location ~ ^/static/(.*)$ {
            root /usr/share/nginx/html;
            try_files /static/$1 =404;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # OHIF static files on root path (comprehensive coverage)
        location /manifest.json {
            proxy_pass http://ohif_backend/manifest.json;
            proxy_set_header Host $host;
        }
        
        location /app-config.js {
            expires -1;
        }
        
        location /init-service-worker.js {
            proxy_pass http://ohif_backend/init-service-worker.js;
            proxy_set_header Host $host;
        }
        
        # CSS files with hashes (e.g., 10.81258732728ed501c1ae.css)
        location ~ ^/[a-f0-9]+\.[a-f0-9]+\.css$ {
            proxy_pass http://ohif_backend$request_uri;
            proxy_set_header Host $host;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
        
        location ~ ^/app\.[a-f0-9]+\.css$ {
            proxy_pass http://ohif_backend$request_uri;
            proxy_set_header Host $host;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
        
        # JS bundle files with hashes (e.g., vendors~app.bundle.d73abe98496fdeef0859.js)
        location ~ ^/vendors~app\.bundle\.[a-f0-9]+\.js$ {
            proxy_pass http://ohif_backend$request_uri;
            proxy_set_header Host $host;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
        
        location ~ ^/app\.bundle\.[a-f0-9]+\.js$ {
            proxy_pass http://ohif_backend$request_uri;
            proxy_set_header Host $host;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
        
        # Workbox and service worker files
        location ~ ^/workbox.*\.(js|mjs)$ {
            proxy_pass http://ohif_backend$request_uri;
            proxy_set_header Host $host;
        }
        
        # All assets folder
        location /assets/ {
            proxy_pass http://ohif_backend/assets/;
            proxy_set_header Host $host;
            expires 24h;
            add_header Cache-Control "public";
        }
        
        # Polyfill fallback - proxy to working CDN
        location /polyfill.min.js {
            proxy_pass https://cdn.jsdelivr.net/npm/core-js-bundle@3/minified.js;
            proxy_set_header Host cdn.jsdelivr.net;
            proxy_ssl_server_name on;
            expires 1h;
            add_header Cache-Control "public";
        }

        # Any other CSS/JS files
        location ~ ^/[^s].*\.css$ {
            proxy_pass http://ohif_backend$request_uri;
            proxy_set_header Host $host;
            expires 1h;
            add_header Cache-Control "public";
        }
        location ~ ^/.*.(js|mjs)$ {
            proxy_pass http://ohif_backend$request_uri;
            proxy_set_header Host $host;
            expires 1h;
            add_header Cache-Control "public";
        } 

        # OHIF Viewer - proxy to container
        location /ohif/ {
            proxy_pass http://ohif_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            return 200 "Server Error - But Supabase PACS is operational!";
            add_header Content-Type text/html;
        }
    }
}
