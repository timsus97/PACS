version: '3.8'

services:
  db_pacs:
    image: postgres:15
    container_name: clinton_postgres
    hostname: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pacs_db}
      POSTGRES_USER: ${POSTGRES_USER:-pacs_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ClintonPACS2024!SecureDB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - pacs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pacs_user}"]
      interval: 30s
      timeout: 10s
      retries: 5

  orthanc:
    image: orthancteam/orthanc:24.1.2
    container_name: clinton_orthanc
    hostname: orthanc_server
    depends_on:
      - db_pacs
    environment:
      ORTHANC__NAME: "Clinton Medical PACS"
      ORTHANC__DICOM_SERVER_ENABLED: "true"
      ORTHANC__DICOM_AET: "CLINTON_PACS"
      ORTHANC__DICOM_PORT: 4242
      ORTHANC__DICOM_SCU_TIMEOUT: 300
      ORTHANC__HTTP_TIMEOUT: 600
      ORTHANC__HTTP_PORT: 8042
      ORTHANC__POSTGRESQL_HOST: db_pacs
      ORTHANC__POSTGRESQL_DATABASE: ${POSTGRES_DB:-pacs_db}
      ORTHANC__POSTGRESQL_USERNAME: ${POSTGRES_USER:-pacs_user}
      ORTHANC__POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD:-ClintonPACS2024!SecureDB}
      ORTHANC__POSTGRESQL_ENABLE_INDEX: "true"
      ORTHANC__POSTGRESQL_ENABLE_STORAGE: "true"
      ORTHANC__REGISTERED_USERS: |
        {
          "admin": "admin",
          "doctor": "doctor123",
          "operator": "operator123"
        }
    volumes:
      - orthanc_data:/var/lib/orthanc/db
      - ./config/orthanc/orthanc.json:/etc/orthanc/orthanc.json:ro
    ports:
      - "4242:4242"
      - "8042:8042"
    networks:
      - pacs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8042/app/explorer.html"]
      interval: 30s
      timeout: 10s
      retries: 5

  ohif_viewer:
    build:
      context: .
      dockerfile: Dockerfile.ohif
    container_name: clinton_ohif
    hostname: ohif_viewer
    depends_on:
      - orthanc
    environment:
      NODE_ENV: production
      ORTHANC_URL: https://srv853233.hstgr.cloud/orthanc
      DICOMWEB_ENDPOINT: https://srv853233.hstgr.cloud/orthanc/dicom-web
    volumes:
      - ./config/ohif/app-config.js:/usr/share/nginx/html/app-config.js:ro
      - ./config/ohif/customizations.js:/usr/share/nginx/html/customizations.js:ro
    ports:
      - "3001:80"
    networks:
      - pacs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  flask_auth_service:
    build:
      context: ./flask_auth_service
      dockerfile: Dockerfile
    container_name: clinton_auth
    hostname: flask_auth
    depends_on:
      - db_pacs
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-pacs_user}:${POSTGRES_PASSWORD:-ClintonPACS2024!SecureDB}@db_pacs:5432/${POSTGRES_DB:-pacs_db}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-ClintonPACSJWTSecret2024!VerySecureKey}
      FLASK_ENV: production
      ORTHANC_URL: http://orthanc:8042
      ORTHANC_USERNAME: admin
      ORTHANC_PASSWORD: admin
    volumes:
      - ./flask_auth_service:/app
    ports:
      - "5000:5000"
    networks:
      - pacs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: clinton_nginx
    hostname: nginx_proxy
    depends_on:
      - ohif_viewer
      - orthanc
      - flask_auth_service
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - pacs_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  orthanc_data:
    driver: local

networks:
  pacs_network:
    driver: bridge
    name: pacs_network
