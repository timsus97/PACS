#!/bin/bash

# Klinika Pro PACS - Quick Start Script
# Author: Tim Hunt (tr00x)
# Version: 1.0

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

print_banner() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë            üè• KLINIKA PRO PACS üè•             ‚ïë"
    echo "‚ïë               –ë—ã—Å—Ç—Ä—ã–π –ó–∞–ø—É—Å–∫                   ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

print_step() {
    echo -e "${YELLOW}[STEP]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if Docker is running
check_docker() {
    if ! docker info > /dev/null 2>&1; then
        print_error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏–ª–∏ systemctl start docker"
        exit 1
    fi
    print_success "Docker —Ä–∞–±–æ—Ç–∞–µ—Ç"
}

# Kill conflicting processes
kill_conflicting_processes() {
    print_step "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤..."
    sudo lsof -ti:80 | xargs kill -9 2>/dev/null || true
    sudo lsof -ti:443 | xargs kill -9 2>/dev/null || true
    lsof -ti:8042 | xargs kill -9 2>/dev/null || true
    lsof -ti:5001 | xargs kill -9 2>/dev/null || true
    print_success "–ü–æ—Ä—Ç—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã"
}

# Start services
start_services() {
    print_step "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose up -d
    print_success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
}

# Wait for services
wait_for_services() {
    print_step "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞"
    for i in {1..15}; do
        echo -n "."
        sleep 2
        
        if curl -s -k https://localhost/ > /dev/null 2>&1; then
            echo ""
            print_success "–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞!"
            return
        fi
    done
    
    echo ""
    print_error "–°–µ—Ä–≤–∏—Å—ã –≤—Å–µ –µ—â–µ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: docker-compose ps"
}

# Show access info
show_access_info() {
    echo ""
    echo -e "${GREEN}üéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
    echo ""
    echo -e "${BLUE}üì± –î–æ—Å—Ç—É–ø:${NC}"
    echo -e "   üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ${GREEN}https://localhost${NC}"
    echo -e "   üîê –í—Ö–æ–¥:       ${GREEN}https://localhost/login${NC}"
    echo ""
    echo -e "${BLUE}üîë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:${NC}"
    echo -e "   admin/admin, doctor/doctor, operator/operator"
    echo ""
}

main() {
    print_banner
    check_docker
    kill_conflicting_processes
    start_services
    wait_for_services
    show_access_info
}

main "$@" 