#!/bin/bash

# Klinika Pro PACS - DICOM Test Data Upload Script
# Author: Tim Hunt (tr00x)
# Version: 1.0

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

# Configuration
ORTHANC_URL="${ORTHANC_URL:-http://localhost:8042}"
ORTHANC_USER="${ORTHANC_USER:-admin_pacs}"
ORTHANC_PASS="${ORTHANC_PASS:-change_this_very_secret_password_for_orthanc_admin}"
TEST_DATA_DIR="orthanc/dicom-test-data"

print_banner() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                    üè• KLINIKA PRO PACS üè•                    ‚ïë"
    echo "‚ïë               –ó–∞–≥—Ä—É–∑–∫–∞ –¢–µ—Å—Ç–æ–≤—ã—Ö DICOM –î–∞–Ω–Ω—ã—Ö               ‚ïë"
    echo "‚ïë                   Author: Tim Hunt (tr00x)                   ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

print_step() {
    echo -e "${YELLOW}[STEP]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if Orthanc is running
check_orthanc() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Orthanc..."
    
    if ! curl -s --connect-timeout 5 "$ORTHANC_URL/system" > /dev/null; then
        print_error "Orthanc –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É $ORTHANC_URL"
        echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:"
        echo "  1. Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã: docker-compose ps"
        echo "  2. Orthanc —Å–µ—Ä–≤–∏—Å –∑–¥–æ—Ä–æ–≤: docker-compose logs orthanc"
        echo "  3. –ü–æ—Ä—Ç 8042 –¥–æ—Å—Ç—É–ø–µ–Ω: curl http://localhost:8042/system"
        exit 1
    fi
    
    print_success "Orthanc –¥–æ—Å—Ç—É–ø–µ–Ω"
}

# Create test data directory
create_test_data_dir() {
    print_step "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
    mkdir -p "$TEST_DATA_DIR"
    print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $TEST_DATA_DIR —Å–æ–∑–¥–∞–Ω–∞"
}

# Download sample DICOM files
download_test_files() {
    print_step "–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑—Ü–æ–≤ DICOM —Ñ–∞–π–ª–æ–≤..."
    
    cd "$TEST_DATA_DIR"
    
    # Sample DICOM files from public repositories
    declare -A test_files=(
        ["CT_small.dcm"]="https://github.com/darcymason/pydicom/raw/main/tests/test_files/CT_small.dcm"
        ["MR_small.dcm"]="https://github.com/darcymason/pydicom/raw/main/tests/test_files/MR_small.dcm"
        ["US_small.dcm"]="https://github.com/darcymason/pydicom/raw/main/tests/test_files/US_small.dcm" 
        ["XR_small.dcm"]="https://github.com/darcymason/pydicom/raw/main/tests/test_files/XR_small.dcm"
        ["CR_small.dcm"]="https://github.com/darcymason/pydicom/raw/main/tests/test_files/CR_small.dcm"
    )
    
    for filename in "${!test_files[@]}"; do
        if [ ! -f "$filename" ]; then
            echo -n "  –°–∫–∞—á–∏–≤–∞–Ω–∏–µ $filename... "
            if wget -q "${test_files[$filename]}" -O "$filename" 2>/dev/null || curl -s -L "${test_files[$filename]}" -o "$filename" 2>/dev/null; then
                echo -e "${GREEN}‚úì${NC}"
            else
                echo -e "${RED}‚úó${NC}"
                print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å $filename"
            fi
        else
            echo -e "  $filename —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ${GREEN}‚úì${NC}"
        fi
    done
    
    cd - > /dev/null
    print_success "–¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã"
}

# Upload DICOM files to Orthanc
upload_files() {
    print_step "–ó–∞–≥—Ä—É–∑–∫–∞ DICOM —Ñ–∞–π–ª–æ–≤ –≤ Orthanc..."
    
    local uploaded=0
    local failed=0
    
    if [ ! -d "$TEST_DATA_DIR" ]; then
        print_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $TEST_DATA_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return 1
    fi
    
    # Find and upload all DICOM files
    for file in "$TEST_DATA_DIR"/*.dcm; do
        if [ -f "$file" ]; then
            filename=$(basename "$file")
            echo -n "  –ó–∞–≥—Ä—É–∑–∫–∞ $filename... "
            
            if curl -s -u "$ORTHANC_USER:$ORTHANC_PASS" \
                   -X POST \
                   -H "Content-Type: application/dicom" \
                   --data-binary "@$file" \
                   "$ORTHANC_URL/instances" > /dev/null; then
                echo -e "${GREEN}‚úì${NC}"
                ((uploaded++))
            else
                echo -e "${RED}‚úó${NC}"
                ((failed++))
            fi
        fi
    done
    
    if [ $uploaded -gt 0 ]; then
        print_success "–ó–∞–≥—Ä—É–∂–µ–Ω–æ $uploaded DICOM —Ñ–∞–π–ª–æ–≤"
    fi
    
    if [ $failed -gt 0 ]; then
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å $failed —Ñ–∞–π–ª–æ–≤"
    fi
    
    if [ $uploaded -eq 0 ]; then
        print_error "–ù–µ –Ω–∞–π–¥–µ–Ω–æ DICOM —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏"
        return 1
    fi
}

# Show statistics
show_statistics() {
    print_step "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Orthanc..."
    
    local stats
    if stats=$(curl -s -u "$ORTHANC_USER:$ORTHANC_PASS" "$ORTHANC_URL/statistics" 2>/dev/null); then
        echo ""
        echo -e "${BLUE}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Orthanc:${NC}"
        echo "$stats" | python3 -m json.tool 2>/dev/null || echo "$stats"
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    fi
}

# Show access information
show_access_info() {
    echo ""
    echo -e "${GREEN}üéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!${NC}"
    echo ""
    echo -e "${BLUE}üåê –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:${NC}"
    echo -e "  –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ${GREEN}https://localhost${NC}"
    echo -e "  –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞:      ${GREEN}https://localhost/login${NC}"
    echo -e "  Orthanc –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:   ${GREEN}http://localhost:8042${NC}"
    echo ""
    echo -e "${BLUE}üîë –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:${NC}"
    echo -e "  admin/admin, doctor/doctor, operator/operator"
    echo ""
    echo -e "${BLUE}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ https://localhost"
    echo "  2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ doctor/doctor"
    echo "  3. –í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
    echo "  4. –°–æ–∑–¥–∞–π—Ç–µ –≤—Ä–∞—á–µ–±–Ω—ã–π –æ—Ç—á–µ—Ç"
    echo ""
}

# Main function
main() {
    print_banner
    check_orthanc
    create_test_data_dir
    download_test_files
    upload_files
    show_statistics
    show_access_info
}

# Run if executed directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi 